{"version":3,"sources":["components/FeedBack/Feedback.styles.jsx","components/Button/Button.styles.jsx","components/Button/Button.jsx","components/FeedBack/Feedback.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","components/Section/Container.jsx","App.js","index.js"],"names":["List","styled","ul","Item","li","Btn","button","Button","feedback","onClick","type","size","color","style","marginBottom","Feedback","options","changeFeedback","Object","keys","map","option","Text","p","props","good","neutral","bad","Statistics","total","positivePercent","percentage","Wrapper","section","Title","h2","Section","main","title","children","Notification","Container","App","state","handleFeedback","opt","currentTarget","dataset","setState","prevState","totalFeedback","positiveFeedbackPercent","Math","round","this","message","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ada10aef.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  width: 150px;\n  padding: 5px 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #f0f0f3;\n  border-radius: 5px;\n  cursor: pointer;\n  outline: none;\n  // text-transform: capitalize;\n  font-size: 18px;\n  font-weight: 500;\n  background-color: transparent;\n  box-shadow: -7px -7px 25px 0 #b4b4b4, 10px 10px 20px 0 #ffffff;\n  transition: all 250ms ease-in-out;\n  &:hover,\n  &:focus-visible {\n    transform: scale(1.2);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styles';\nimport {\n  FaRegSmile,\n  FaRegMehRollingEyes,\n  FaRegFrownOpen,\n} from 'react-icons/fa';\n\nconst Button = ({ feedback, onClick }) => {\n  return (\n    <Btn type=\"button\" data-feedback={feedback} onClick={onClick}>\n      {feedback === 'good' && (\n        <FaRegSmile size=\"110\" color=\"green\" style={{ marginBottom: 10 }} />\n      )}\n      {feedback === 'neutral' && (\n        <FaRegMehRollingEyes\n          size=\"110\"\n          color=\"grey\"\n          style={{ marginBottom: 10 }}\n        />\n      )}\n      {feedback === 'bad' && (\n        <FaRegFrownOpen size=\"100\" color=\"red\" style={{ marginBottom: 10 }} />\n      )}\n      {feedback}\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n  feedback: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport { List, Item } from './Feedback.styles';\nimport Button from '../Button/Button';\n\nconst Feedback = ({ options, changeFeedback }) => {\n  options = Object.keys(options);\n\n  return (\n    <List>\n      {options.map(option => (\n        <Item key={option}>\n          <Button feedback={option} onClick={changeFeedback} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nFeedback.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }).isRequired,\n  changeFeedback: PropTypes.func.isRequired,\n};\n\nexport default Feedback;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 500;\n  color: ${props =>\n    (props.good && 'green') ||\n    (props.neutral && 'grey') ||\n    (props.bad && 'red') ||\n    '#9370db'};\n  & svg {\n    margin-right: 5px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  FaRegSmile,\n  FaRegMehRollingEyes,\n  FaRegFrownOpen,\n  FaRegListAlt,\n  FaRegSmileBeam,\n} from 'react-icons/fa';\nimport { List, Item, Text } from './Statistics.styles';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercent = 0 }) => {\n  return (\n    <List>\n      <Item>\n        <Text good>\n          <FaRegSmile /> Good: {good}\n        </Text>\n      </Item>\n      <Item>\n        <Text neutral>\n          <FaRegMehRollingEyes /> Neutral: {neutral}\n        </Text>\n      </Item>\n      <Item>\n        <Text bad>\n          <FaRegFrownOpen /> Bad: {bad}\n        </Text>\n      </Item>\n      <Item>\n        <Text total>\n          <FaRegListAlt /> Total: {total}\n        </Text>\n      </Item>\n      <Item>\n        <Text percentage>\n          <FaRegSmileBeam />\n          Positive: {positivePercent} %\n        </Text>\n      </Item>\n    </List>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercent: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.section`\n  padding: 40px 0;\n`;\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  text-transform: uppercase;\n  font-size: 32px;\n  text-align: center;\n  color: #3b3b3b;\n  width: ;\n  border-box: 4px;\n  background-color: #ba9c9c;\n  box-shadow: 10px 10px 20px 0 #ede6e6;\n  & svg {\n    margin-left: 20px;\n  }\n`;\n\nexport const Section = styled.main`\n  justify-content: space-around;\n  width: 1200px;\n  border-radius: 5px;\n  border: 1px solid #f0f0f3;\n  margin: 50px auto 0;\n  background-color: #f0f0f3;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styles';\nimport { FaRegCommentAlt, FaRegChartBar } from 'react-icons/fa';\nconst Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && (\n        <Title>\n          {title}\n          {title === 'Please leave feedback' && <FaRegCommentAlt />}\n          {title === 'Statistics' && <FaRegChartBar />}\n        </Title>\n      )}\n\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  color: #3c3c3c;\n  & svg {\n    margin-left: 10px;\n  }\n`;\n","import { Text } from './Notification.styles';\nimport { FaRegSurprise } from 'react-icons/fa';\n\nconst Notification = () => (\n  <Text>\n    No feedback given <FaRegSurprise size=\"26\" />\n  </Text>\n);\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport { Section } from './Section.styles';\n\nconst Container = ({ children }) => {\n  return <Section>{children}</Section>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport Feedback from './components/FeedBack/Feedback';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\nimport Container from './components/Section/Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = opt => {\n    const feedback = opt.currentTarget.dataset.feedback;\n    this.setState(prevState => {\n      return {\n        [feedback]: prevState[feedback] + 1,\n      };\n    });\n  };\n\n  totalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positiveFeedbackPercent = () => {\n    const total = this.totalFeedback();\n    const { good } = this.state;\n\n    return total !== 0 ? Math.round((good * 100) / total) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <Container>\n            <Feedback\n              options={this.state}\n              changeFeedback={this.handleFeedback}\n            />\n          </Container>\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Container>\n            {this.totalFeedback() > 0 ? (\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={this.totalFeedback()}\n                positivePercent={this.positiveFeedbackPercent()}\n              />\n            ) : (\n              <Notification message=\"No feedback given\" />\n            )}\n          </Container>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}